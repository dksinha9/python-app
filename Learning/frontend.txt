 Based on the login.tsx file and the broader codebase, here are the React
  concepts you need to learn:

  Core React Concepts

  1. Functional Components - Component defined as functions (login.tsx:30)
  2. JSX/TSX - Writing HTML-like syntax in JavaScript/TypeScript
  3. Hooks:
    - useForm - Form state management (login.tsx:32-43)
    - useState - Local state management (useAuth.ts:20)
    - useQuery - Data fetching (useAuth.ts:23)
    - useMutation - Data mutations (useAuth.ts:29, 51)

  Form Handling

  4. React Hook Form - Form library used throughout:
    - register - Register inputs (login.tsx:82-85)
    - handleSubmit - Form submission handler (login.tsx:60)
    - formState - Form state like errors, isSubmitting (login.tsx:35)
    - Form validation rules (login.tsx:82-85)

  TypeScript Integration

  5. TypeScript with React:
    - Type definitions for props and state
    - Generic types like SubmitHandler<AccessToken> (login.tsx:45)
    - Interface imports (login.tsx:10)

  Routing

  6. TanStack Router (formerly React Router):
    - createFileRoute - File-based routing (login.tsx:19)
    - beforeLoad - Route guards (login.tsx:21-27)
    - redirect - Navigation redirects (login.tsx:23-25)
    - useNavigate - Programmatic navigation (useAuth.ts:21)

  State Management & Data Fetching

  7. TanStack Query (React Query):
    - QueryClient & QueryClientProvider - Global setup (main.tsx:25-32, 44)
    - useQuery - Fetching data (useAuth.ts:23-27)
    - useMutation - Async mutations (useAuth.ts:29-42, 51-59)
    - queryClient.invalidateQueries - Cache invalidation (useAuth.ts:40)

  UI & Styling

  8. Chakra UI - Component library:
    - Pre-built components (Container, Input, Image, Text)
    - Component composition (login.tsx:58-110)

  Event Handling

  9. Event Handlers:
    - onSubmit function (login.tsx:45-55)
    - Async event handling with try-catch

  Conditional Rendering

  10. Conditional Logic:
    - Error display {!!errors.username} (login.tsx:77)
    - Loading states with isSubmitting (login.tsx:46, 101)

  Custom Hooks

  11. Custom Hooks - Creating reusable logic (useAuth.ts:19-77)

  Browser APIs

  12. LocalStorage - Client-side storage (useAuth.ts:16, 48, 63)